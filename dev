#!/bin/bash
#
# Helper script to build & run your dev stack inside a Docker container
# Usage: dev <COMMAND> <APP>
#        COMMAND: up | halt
#        APP    : Give a name to your container
#
 
# Get name
if [[ -z $1 || -z $2 ]]
then
    echo "Helper script to build & run your dev stack inside a Docker container
 Usage: dev <COMMAND> <APP> [<PATH_TO_APP> to mount on /app]
        COMMAND: up | halt
        APP    : Give a name to your container"
    exit 1
else
    COMMAND=$1
    NAME=$2
    if [[ -z $3 ]]; then
	REPO=$(pwd)
    else
	REPO=$3
    fi
fi
 
##############################
# #### Let's go folks ! #### #
##############################
CONTAINER_ID=$(sudo docker ps | grep $NAME | awk '{print $1}')
CONTAINER_IMAGE=$(sudo docker images | grep $NAME | awk '{print $3}')

if [[ $COMMAND == 'up' ]]
then
 
    # if container is not running
    if [[ -z "$CONTAINER_ID" ]]
    then
 
	# if container image is not built
	if [[ -z "$CONTAINER_IMAGE" ]]
	then
	    # Build Docker image
	    sudo docker build -t $NAME .
	fi
 
	# Run docker image in a container
	CONTAINER_ID=$(sudo docker run -p 80:80 -p 22 -v $REPO:/app -d $NAME)
    fi
 
    # Get container's IP
    CONTAINER_IP=$(sudo docker inspect $CONTAINER_ID | grep IPAddress | cut -d '"' -f 4)
 
    # Success
    echo "$NAME($CONTAINER_ID) tourne sur l'ip : $CONTAINER_IP"

# COMMAND != up
else

    # if container is not running
    if [[ -z "$CONTAINER_ID" ]]
    then
	echo "No container with the name '$NAME' is running, did you spell the name correctly?"
    else
	sudo docker stop $CONTAINER_ID
	echo "Stopped successfully"
    fi

fi
